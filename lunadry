#!/bin/bash

#    Lunadry -- A code formatter.
#    Copyright (C) 2014 Patrick Joseph Donnelly
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

DIRECTORY=$(dirname "$0") # directory of executable

ARGUMENTS='--options i,h --long in-place,help --name lunadry'
IN_PLACE=0

NEW_ARGUMENTS=$(getopt $ARGUMENTS -- "$@")

function usage {
  echo "$0 [--in-place] file1 [file2 [...]]"
}

if [ $? -ne 0 ]; then
  usage
  exit 1
fi

eval set -- "$NEW_ARGUMENTS"

while [ $# -ge 0 ]; do
  case "$1" in
    -i|--in-place)
      IN_PLACE=1
      shift
      ;;
    -h|--help)
      usage
      exit
      ;;
    --)
      shift
      break
      ;;
  esac
done

set -e

# batrick@batbytes:~$ luac -l -p -
# foo = function () end
#
# main <stdin:0,0> (3 instructions, 12 bytes at 0x172c230)
# 0+ params, 2 slots, 0 upvalues, 0 locals, 1 constant, 1 function
#         1       [1]     CLOSURE         0 0     ; 0x172c410
#         2       [1]     SETGLOBAL       0 -1    ; foo
#         3       [1]     RETURN          0 1
#
# function <stdin:1,1> (1 instruction, 4 bytes at 0x172c410)
# 0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
#        1       [1]     RETURN          0 1
#
# We filter out everything but the opcodes and the lines specifying the
# function statistics (# of parameters, upvalues, etc.). We also remove CLOSURE
# opcodes because they include a runtime pointer address which changes across
# luac invocations.

function filter {
  grep --invert-match -E "^function|main" | grep --invert-match "^[[:space:]]*$" | grep --invert-match CLOSURE | cut -f 2,4-
}

for file do
  out="${file}.out"
  echo Formatting "$file" >&2
  lua "$DIRECTORY/lunadry.lua" < "$file" > "$out"
  diff -Naur <(luac -l -p "$file" | filter) <(luac -l -p "$out" | filter) >&2
  if [ $IN_PLACE -eq 1 ]; then
    mv -f "$out" "$file"
  fi
done
